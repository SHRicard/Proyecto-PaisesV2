{"version":3,"sources":["Components/Card/Card.js","Components/Home/Home.js","Redux/Actions/index.js","App.js","reportWebVitals.js","Redux/Reducer/index.js","Redux/Store/index.js","index.js"],"names":["Card","name","img","src","alt","width","height","Home","dispatch","useDispatch","allCountries","useSelector","state","country","console","log","useEffect","a","axios","get","JsonCountries","type","payload","data","map","el","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","countries","rootReducer","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAWeA,EATF,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IACpB,OACE,gCACE,6BAAKD,IACL,qBAAKE,IAAKD,EAAKE,IAAI,SAASC,MAAM,QAAQC,OAAO,cCwBxCC,G,MAtBF,WACX,IAAMC,EAAWC,cACXC,EAAeC,aAAY,SAACC,GAAD,OAAWA,EAAMC,WAOlD,OANAC,QAAQC,IAAIL,KAEZM,qBAAU,WACRR,ECVF,uCAAO,WAAgBA,GAAhB,eAAAS,EAAA,sEACqBC,IAAMC,IAC9B,oCACA,IAHG,cACDC,EADC,yBAKEZ,EAAS,CACda,KAAM,gBACNC,QAASF,EAAcG,QAPpB,2CAAP,yDDWG,CAACf,IAGF,qCACGE,QADH,IACGA,OADH,EACGA,EAAcc,KAAI,SAACC,GAClB,OACE,qCACE,cAAC,EAAD,CAAMxB,KAAMwB,EAAGxB,KAAMC,IAAKuB,EAAGvB,MAD/B,cETKwB,MARf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWtB,OCK5BuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uCCPRQ,EAAe,CACnBC,UAAW,IAiBEC,MAdf,WAAoD,IAA/B7B,EAA8B,uDAAtB2B,EAAcG,EAAQ,uCACjD,MACO,kBADCA,EAAOrB,KAEJ,2BACFT,GADL,IAEE4B,UAAWE,EAAOpB,UAGb,eACFV,ICFI+B,EAJDC,sBACZH,EACAI,8BAAoBC,0BAAgBC,OCAtCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,UAINQ,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.2c42a1ac.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({ name, img }) => {\n  return (\n    <div>\n      <h3>{name}</h3>\n      <img src={img} alt=\"no img\" width=\"200px\" height=\"200px\" />\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllCountries } from \"../../Redux/Actions\";\nimport Card from \"../Card/Card.js\";\nimport \"./Home.css\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const allCountries = useSelector((state) => state.country);\n  console.log(allCountries());\n\n  useEffect(() => {\n    dispatch(getAllCountries());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {allCountries?.map((el) => {\n        return (\n          <fragment>\n            <Card name={el.name} img={el.img} />;\n          </fragment>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from \"axios\";\nexport const GET_COUNTRIES = \"GET_COUNTRIES\";\n\nexport function getAllCountries() {\n  return async function (dispatch) {\n    let JsonCountries = await axios.get(\n      \"http://localhost:3001/api/country\",\n      {}\n    );\n    return dispatch({\n      type: \"GET_COUNTRIES\",\n      payload: JsonCountries.data,\n    });\n  };\n}\n","import { Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./Components/Home/Home.js\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/home\" component={Home} />\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n  countries: [],\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"GET_COUNTRIES\":\n      return {\n        ...state,\n        countries: action.payload,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n}\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../Reducer\";\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/Store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}